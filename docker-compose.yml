version: '3'

services:
  db:
    image: postgres:16
    restart: on-failure
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db-data:/usr/share/db
    networks:
      - result-tier
      - back-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d database -U admin"]
      interval: 10s

  redis:
    image: redis:7.2.4
    restart: on-failure
    ports:
      - '6379:6379'
    networks:
      - poll-tier
      - back-tier

  poll:
    build: ./poll
    restart: on-failure
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
    ports:
      - "5000:80"
    networks:
      - poll-tier

  worker:
    build: ./worker
    restart: on-failure
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345
      - REDIS_HOST=redis
    networks:
      - back-tier

  result:
    build: ./result
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345
    ports:
      - "5001:80"
    networks:
      - result-tier

volumes:
  db-data:

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge

